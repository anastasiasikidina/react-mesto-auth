{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\dev\\\\mesto-react\\\\mesto_react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport { api } from '../utils/api';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: ''\n  });\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  useEffect(() => {\n    Promise.all([api.getInitialInfo(), api.getInitialCards()]).then(([info, cardsArr]) => {\n      setCurrentUser(info);\n      setCards(cardsArr);\n      setIsLoading(false);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleSubmitDeleteCard(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    setCardToDelete(card);\n    setDeletePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(info) {\n    api.setUserInfo(info).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.setUserAvatar(link).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.createNewCard(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeletePopupOpen,\n        onClose: closeAllPopups,\n        onDeleteCard: handleSubmitDeleteCard,\n        card: cardToDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VDXX6/Un9rUYdou6LB9vOjuw9Fw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Anastasia/dev/mesto-react/mesto_react/src/components/App.js"],"names":["React","useState","useEffect","CurrentUserContext","Header","api","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","ImagePopup","Spinner","App","currentUser","setCurrentUser","name","about","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePopupOpen","setDeletePopupOpen","cards","setCards","selectedCard","setSelectedCard","isLoading","setIsLoading","cardToDelete","setCardToDelete","Promise","all","getInitialInfo","getInitialCards","then","info","cardsArr","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleSubmitDeleteCard","deleteCard","filter","closeAllPopups","handleCardDelete","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleUpdateUser","setUserInfo","res","handleUpdateAvatar","link","setUserAvatar","handleAddPlaceSubmit","createNewCard"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport { api } from '../utils/api';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport Spinner from './Spinner';\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({ name: '', about: '' });\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  useEffect(() => {\n    Promise.all([api.getInitialInfo(), api.getInitialCards()])\n      .then(([info, cardsArr]) => {\n        setCurrentUser(info);\n        setCards(cardsArr);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(err => console.log(err));\n  }\n  function handleSubmitDeleteCard(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n  function handleCardDelete(card) {\n    setCardToDelete(card);\n    setDeletePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(null);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleUpdateUser(info) {\n    api.setUserInfo(info)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n  function handleUpdateAvatar(link) {\n    api.setUserAvatar(link)\n      .then(info => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n  function handleAddPlaceSubmit(card) {\n    api.createNewCard(card)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        {isLoading ? <Spinner /> : < Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />}\n        <Footer />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n        <DeleteCardPopup isOpen={isDeletePopupOpen} onClose={closeAllPopups} onDeleteCard={handleSubmitDeleteCard} card={cardToDelete} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}