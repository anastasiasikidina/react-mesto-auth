{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getInitialInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  createNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  _likeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  _dislikeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, status) {\n    return status ? this._likeCard(cardId) : this._dislikeCard(cardId);\n  }\n\n  setUserAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-27',\n  headers: {\n    authorization: '2d3e1cdc-e394-4bd9-a5ca-873b1a753e66',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["C:/Users/Anastasia/dev/mesto-react/mesto_react/src/utils/api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","getInitialInfo","fetch","then","_checkResponse","getInitialCards","setUserInfo","data","method","body","JSON","stringify","createNewCard","deleteCard","cardId","_likeCard","_dislikeCard","changeLikeCardStatus","status","setUserAvatar","link","avatar","res","ok","Promise","reject","json","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;AACH;;AACDC,EAAAA,cAAc,GAAG;AACb,WAAOC,KAAK,CAAE,GAAE,KAAKL,QAAS,WAAlB,EAA8B;AACtCG,MAAAA,OAAO,EAAE,KAAKD;AADwB,KAA9B,CAAL,CAGFI,IAHE,CAGG,KAAKC,cAHR,CAAP;AAIH;;AAEDC,EAAAA,eAAe,GAAG;AACd,WAAOH,KAAK,CAAE,GAAE,KAAKL,QAAS,QAAlB,EAA2B;AACnCG,MAAAA,OAAO,EAAE,KAAKD;AADqB,KAA3B,CAAL,CAGFI,IAHE,CAGG,KAAKC,cAHR,CAAP;AAIH;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,WAAOL,KAAK,CAAE,GAAE,KAAKL,QAAS,WAAlB,EAA8B;AACtCW,MAAAA,MAAM,EAAE,OAD8B;AAEtCR,MAAAA,OAAO,EAAE,KAAKD,QAFwB;AAGtCU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAHgC,KAA9B,CAAL,CAKFJ,IALE,CAKG,KAAKC,cALR,CAAP;AAMH;;AACDQ,EAAAA,aAAa,CAACL,IAAD,EAAO;AAChB,WAAOL,KAAK,CAAE,GAAE,KAAKL,QAAS,QAAlB,EAA2B;AACnCW,MAAAA,MAAM,EAAE,MAD2B;AAEnCR,MAAAA,OAAO,EAAE,KAAKD,QAFqB;AAGnCU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAH6B,KAA3B,CAAL,CAKFJ,IALE,CAKG,KAAKC,cALR,CAAP;AAMH;;AACDS,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,WAAOZ,KAAK,CAAE,GAAE,KAAKL,QAAS,UAASiB,MAAO,EAAlC,EAAqC;AAC7CN,MAAAA,MAAM,EAAE,QADqC;AAE7CR,MAAAA,OAAO,EAAE,KAAKD;AAF+B,KAArC,CAAL,CAIFI,IAJE,CAIG,KAAKC,cAJR,CAAP;AAKH;;AACDW,EAAAA,SAAS,CAACD,MAAD,EAAS;AACd,WAAOZ,KAAK,CAAE,GAAE,KAAKL,QAAS,gBAAeiB,MAAO,EAAxC,EAA2C;AACnDN,MAAAA,MAAM,EAAE,KAD2C;AAEnDR,MAAAA,OAAO,EAAE,KAAKD;AAFqC,KAA3C,CAAL,CAIFI,IAJE,CAIG,KAAKC,cAJR,CAAP;AAKH;;AACDY,EAAAA,YAAY,CAACF,MAAD,EAAS;AACjB,WAAOZ,KAAK,CAAE,GAAE,KAAKL,QAAS,gBAAeiB,MAAO,EAAxC,EAA2C;AACnDN,MAAAA,MAAM,EAAE,QAD2C;AAEnDR,MAAAA,OAAO,EAAE,KAAKD;AAFqC,KAA3C,CAAL,CAIFI,IAJE,CAIG,KAAKC,cAJR,CAAP;AAKH;;AACDa,EAAAA,oBAAoB,CAACH,MAAD,EAASI,MAAT,EAAiB;AACjC,WAAOA,MAAM,GAAG,KAAKH,SAAL,CAAeD,MAAf,CAAH,GAA4B,KAAKE,YAAL,CAAkBF,MAAlB,CAAzC;AACH;;AACDK,EAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,WAAOlB,KAAK,CAAE,GAAE,KAAKL,QAAS,kBAAlB,EAAqC;AAC7CW,MAAAA,MAAM,EAAE,OADqC;AAE7CR,MAAAA,OAAO,EAAE,KAAKD,QAF+B;AAG7CU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,QAAAA,MAAM,EAAED;AADS,OAAf;AAHuC,KAArC,CAAL,CAOFjB,IAPE,CAOG,KAAKC,cAPR,CAAP;AAQH;;AACDA,EAAAA,cAAc,CAACkB,GAAD,EAAM;AAChB,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,aAAOC,OAAO,CAACC,MAAR,CAAgB,wBAAuBH,GAAG,CAACJ,MAAO,EAAlD,CAAP;AACH;;AACD,WAAOI,GAAG,CAACI,IAAJ,EAAP;AACH;;AA1EK;;AA4EV,OAAO,MAAMC,GAAG,GAAG,IAAIjC,GAAJ,CAAQ;AACvBI,EAAAA,OAAO,EAAE,6CADc;AAEvBE,EAAAA,OAAO,EAAE;AACL4B,IAAAA,aAAa,EAAE,sCADV;AAEL,oBAAgB;AAFX;AAFc,CAAR,CAAZ","sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n    getInitialInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    };\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n\n    setUserInfo(data) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify(data)\n        })\n            .then(this._checkResponse)\n    }\n    createNewCard(data) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify(data)\n        })\n            .then(this._checkResponse)\n    }\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n    _likeCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n    _dislikeCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(this._checkResponse)\n    }\n    changeLikeCardStatus(cardId, status) {\n        return status ? this._likeCard(cardId) : this._dislikeCard(cardId);\n    }\n    setUserAvatar(link) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: link\n            })\n        })\n            .then(this._checkResponse)\n    }\n    _checkResponse(res) {\n        if (!res.ok) {\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\n        }\n        return res.json();\n    }\n}\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-27',\n    headers: {\n        authorization: '2d3e1cdc-e394-4bd9-a5ca-873b1a753e66',\n        'Content-Type': 'application/json'\n    }\n});\n"]},"metadata":{},"sourceType":"module"}