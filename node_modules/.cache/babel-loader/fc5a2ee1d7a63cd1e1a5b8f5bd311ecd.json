{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\dev\\\\mesto-react\\\\mesto_react\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport api from \"./../utils/Api\";\nimport Card from \"./Card.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const {\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick\n  } = props;\n  const [userName, setUserName] = React.useState(\"\");\n  const [userDescription, setUserDescription] = React.useState(\"\");\n  const [userAvatar, setUserAvatar] = React.useState(\"\");\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useContext(CurrentUserContext);\n  const [cardForDelete, setCardForDelete] = React.useState({});\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(evt) {\n    evt.preventDefault();\n    api.deleteCard(cardForDelete._id).then(() => {\n      const newCards = cards.filter(elem => elem !== cardForDelete);\n      setCards(newCards);\n      closeAllPopups();\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  React.useEffect(() => {\n    api.getUserInformation().then(card => {\n      setUserName(card.name);\n      setUserDescription(card.about);\n      setUserAvatar(card.avatar);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      console.log(cards);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__photo-wrapper\",\n          onClick: onEditAvatar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            name: \"avatar\",\n            src: userAvatar,\n            alt: \"\\u0412\\u0430\\u0448\\u0435 \\u0444\\u043E\\u0442\\u043E\",\n            className: \"profile__photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__btn-edit\",\n            type: \"button\",\n            value: \"\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__about\",\n            children: userDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__btn-add\",\n          type: \"button\",\n          onClick: onAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"photos\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClick: onCardClick,\n        onCardLike: onCardLike,\n        onDeleteClick: props.onDeleteClick\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"infPrOWUc27SWeydJ7jAyOvidtU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Anastasia/dev/mesto-react/mesto_react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","onEditAvatar","onEditProfile","onAddPlace","onCardClick","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","currentUser","useContext","cardForDelete","setCardForDelete","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","handleCardDelete","evt","preventDefault","deleteCard","newCards","filter","elem","closeAllPopups","err","console","log","useEffect","getUserInformation","name","about","avatar","catch","getInitialCards","onCardLike","onDeleteClick"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from \"./../utils/Api\";\r\nimport Card from \"./Card.js\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  \r\n  const { onEditAvatar, onEditProfile, onAddPlace, onCardClick } = props;\r\n\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [userDescription, setUserDescription] = React.useState(\"\");\r\n  const [userAvatar, setUserAvatar] = React.useState(\"\");\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [cardForDelete, setCardForDelete] = React.useState({})\r\n\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n    });\r\n} \r\n\r\nfunction handleCardDelete(evt) {\r\n  evt.preventDefault();\r\n  api.deleteCard(cardForDelete._id)\r\n    .then(\r\n      () => {\r\n        const newCards = cards.filter((elem) => elem !== cardForDelete);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n}\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInformation()\r\n      .then((card) => {\r\n        setUserName(card.name);\r\n        setUserDescription(card.about);\r\n        setUserAvatar(card.avatar);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getInitialCards()\r\n      .then((cards) => {\r\n        console.log(cards);\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile__photo-wrapper\" onClick={onEditAvatar}>\r\n            <img\r\n              name=\"avatar\"\r\n              src={userAvatar}\r\n              alt=\"Ваше фото\"\r\n              className=\"profile__photo\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__name\">{userName}</h1>\r\n            <button\r\n              className=\"profile__btn-edit\"\r\n              type=\"button\"\r\n              value=\"\"\r\n              onClick={onEditProfile}\r\n            ></button>\r\n            <p className=\"profile__about\">{userDescription}</p>\r\n          </div>\r\n\r\n          <button\r\n            className=\"profile__btn-add\"\r\n            type=\"button\"\r\n            onClick={onAddPlace}\r\n          ></button>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"photos\">\r\n        {cards.map((card) => (\r\n          <Card \r\n          card={card} \r\n          key={card._id} \r\n          onCardClick={onCardClick}\r\n          onCardLike={onCardLike}\r\n          onDeleteClick={props.onDeleteClick}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}