{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\dev\\\\mesto-react\\\\mesto_react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [currentUser, setCurrentUser] = React.useState();\n  React.useEffect(() => {\n    api.getUserInformation().then(card => {\n      setUserName(card.name);\n      setUserDescription(card.about);\n      setUserAvatar(card.avatar);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  ;\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  ;\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  ;\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard({\n      name: selectedCard.name,\n      link: selectedCard.link\n    });\n  }\n\n  function handleCardLike() {\n    onCardLike(card);\n  }\n\n  function handleCardDelete() {\n    props.onDeleteClick(props.card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onAddPlace: handleAddPlaceClick,\n      onCardClick: handleCardClick,\n      onCardLike: handleCardLike,\n      onDeleteClick: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"hVXEnadvCYpPCX7I+dD6UFTUVoo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Anastasia/dev/mesto-react/mesto_react/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","AddPlacePopup","EditAvatarPopup","EditProfilePopup","api","CurrentUserContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","useEffect","getUserInformation","then","card","setUserName","setUserDescription","about","setUserAvatar","avatar","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","handleCardLike","onCardLike","handleCardDelete","props","onDeleteClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({ name: '', link: '' });\n  const [currentUser, setCurrentUser] = React.useState();\n  \n\n  React.useEffect(() => {\n    api\n      .getUserInformation()\n      .then((card) => {\n        setUserName(card.name);\n        setUserDescription(card.about);\n        setUserAvatar(card.avatar);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleEditAvatarClick() {\n      setIsEditAvatarPopupOpen(true);\n  };\n\n  function handleEditProfileClick() {\n      setIsEditProfilePopupOpen(true);\n  };\n\n  function handleAddPlaceClick() {\n      setIsAddPlacePopupOpen(true);\n  };\n\n  function closeAllPopups() {\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setIsAddPlacePopupOpen(false);\n\n      setSelectedCard({ name: '', link: '' });\n  }\n\n  function handleCardClick(selectedCard) {\n      setSelectedCard({ name: selectedCard.name, link: selectedCard.link });\n  }\n  function handleCardLike() {\n    onCardLike(card);\n  }\n  \nfunction handleCardDelete() {\n    props.onDeleteClick(props.card);\n  }  \n\n  return (\n      <div className=\"root\">\n          <Header />\n\n          <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onDeleteClick={handleCardDelete}\n\n          />\n\n          <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n          />\n\n          <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n          />\n\n          <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n          /> \n\n          <ImagePopup\n              card={selectedCard}\n              onClose={closeAllPopups}\n          />\n\n          <Footer />\n\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}