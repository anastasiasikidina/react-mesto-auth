{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\dev\\\\mesto-react\\\\mesto_react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport api from \"../utils/Api\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    name: \"\",\n    about: \"\"\n  });\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  useEffect(() => {\n    Promise.all([api.getInitialInfo(), api.getInitialCards()]).then(([info, cardsArr]) => {\n      setCurrentUser(info);\n      setCards(cardsArr);\n      setIsLoading(false);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleSubmitDeleteCard(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    setCardToDelete(card);\n    setDeletePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(info) {\n    api.setUserInfo(info).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.setUserAvatar(link).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.createNewCard(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeletePopupOpen,\n        onClose: closeAllPopups,\n        onDeleteCard: handleSubmitDeleteCard,\n        card: cardToDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BVIC8rsU8wYuNqiAdiByXRMcsN4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Anastasia/dev/mesto-react/mesto_react/src/components/App.js"],"names":["React","useState","useEffect","CurrentUserContext","Header","api","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","ImagePopup","Spinner","App","currentUser","setCurrentUser","name","about","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePopupOpen","setDeletePopupOpen","cards","setCards","selectedCard","setSelectedCard","cardToDelete","setCardToDelete","Promise","all","getInitialInfo","getInitialCards","then","info","cardsArr","setIsLoading","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleSubmitDeleteCard","deleteCard","filter","closeAllPopups","handleCardDelete","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleUpdateUser","setUserInfo","res","handleUpdateAvatar","link","setUserAvatar","handleAddPlaceSubmit","createNewCard","isLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport  api from \"../utils/Api\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Spinner from \"./Spinner\";\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({ name: \"\", about: \"\" });\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  useEffect(() => {\n    Promise.all([api.getInitialInfo(), api.getInitialCards()])\n      .then(([info, cardsArr]) => {\n        setCurrentUser(info);\n        setCards(cardsArr);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleSubmitDeleteCard(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    setCardToDelete(card);\n    setDeletePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(info) {\n    api\n      .setUserInfo(info)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api\n      .setUserAvatar(link)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api\n      .createNewCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header />\n        {isLoading ? (\n          <Spinner />\n        ) : (\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          )}\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <DeleteCardPopup\n          isOpen={isDeletePopupOpen}\n          onClose={closeAllPopups}\n          onDeleteCard={handleSubmitDeleteCard}\n          card={cardToDelete}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}