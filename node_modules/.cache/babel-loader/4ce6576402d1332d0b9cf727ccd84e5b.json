{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getUserInformation() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n      method: \"GET\"\n    }).then(this._checkResponse);\n  }\n\n  updateUserInformation(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addNewCardToServer(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  updateUserAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-25\",\n  headers: {\n    authorization: \"aa278cc5-8371-4a9c-869b-e11b649efea5\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/Anastasia/dev/mesto-react/mesto_react/src/utils/Api.js"],"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","getUserInformation","method","updateUserInformation","name","about","body","JSON","stringify","addNewCardToServer","link","updateUserAvatar","avatar","setLike","cardId","removeLike","deleteCard","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n      this._url = options.baseUrl\n      this._headers = options.headers\n    }\n  \n    _checkResponse(res){\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getInitialCards() {\n      return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n    }  \n    \n    getUserInformation(){\n      return fetch(`${this._url}/users/me`, {\n        headers: this._headers,\n        method: \"GET\",\n      })\n      .then(this._checkResponse)\n    }\n  \n    updateUserInformation(name, about){\n      return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n      })\n      .then(this._checkResponse);\n    }\n  \n    addNewCardToServer(name, link){\n      return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      })  \n      .then(this._checkResponse);\n    }\n  \n    updateUserAvatar(avatar){\n      return fetch(`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: avatar\n        })\n      })\n      .then(this._checkResponse);\n    }\n  \n    setLike(cardId){\n      return fetch(`${this._url}/cards/likes/${cardId}`,{\n        method: 'PUT',\n        headers: this._headers\n      })\n      .then(this._checkResponse);\n    }\n  \n    removeLike(cardId){\n      return fetch(`${this._url}/cards/likes/${cardId}`,{\n        method: \"DELETE\",\n        headers: this._headers\n      })\n      .then(this._checkResponse);\n    }\n  \n    deleteCard(cardId){\n      return fetch(`${this._url}/cards/${cardId}`, {\n        method: \"DELETE\",\n        headers: this._headers\n      })\n      .then(this._checkResponse);\n    }\n  }\n\n  const api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-25\",\n    headers: {\n      authorization: \"aa278cc5-8371-4a9c-869b-e11b649efea5\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  export default api;"]},"metadata":{},"sourceType":"module"}